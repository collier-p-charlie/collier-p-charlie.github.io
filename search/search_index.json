{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Hi, I'm Charlie, I'm based in the UK. I am currently a Data Engineer at Trinity College London.</p> <p>For more information on my experience, please see CV. A link to my latest blog posts is here. A link to my personal GitHub is here. A link to my LinkedIn is here.</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/08/25/introduction-to-logic/","title":"Introduction to Logic","text":"<p>Before getting into the study of analysis, we need to understand some basic concepts in logic. Indeed, logic is the foundation of all mathematical reasoning, and it will be used extensively through this blog series.</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#logical-connectives","title":"Logical Connectives","text":"<p>In logic, a statement is an assertion which is either true T or false F, but not both. For example, the statement \\(1 &gt; 0\\) is T and \\(1 = 2\\) is F.  Now suppose we have generic statements \\(P\\), \\(Q\\) and \\(R\\), then we can construct compound statements using logical connectives. For example, we have the following:</p> <ol> <li>Conjunction, denoted by \\(P \\land Q\\), which is true if and only if both \\(P\\) and \\(Q\\) are true, and false otherwise;</li> <li>Disjunction, denoted by \\(P \\lor Q\\), which is true if and only if \\(P\\) or \\(Q\\) or both are true;</li> <li>Implication, denoted by \\(P \\Rightarrow Q\\), which is true unless \\(P\\) is true and \\(Q\\) is false; and</li> <li>Negation, denoted by \\(\\neg P\\), which is true if and only if \\(P\\) is false.</li> </ol> <p>These logical connectives can be defined using truth tables as follows:</p> \\(P\\) \\(Q\\) \\(P \\land Q\\) \\(P \\lor Q\\) \\(P \\Rightarrow Q\\) \\(\\neg P\\) T T T T T F T F F T F F F T F T T T F F F F T T <p>For more reading on this, see here. We note that the implication \\(P \\Rightarrow Q\\) can be interpreted as \"if \\(P\\) then \\(Q\\)\", and is equivalent to \\(\\neg P \\lor Q\\). The distributive and de Morgan's laws are important properties of logical connectives, and are given as follows:</p> \\[\\begin{align*} P \\land (Q \\lor R) &amp;= (P \\land Q) \\lor (P \\land R) \\\\ P \\lor (Q \\land R) &amp;= (P \\lor Q) \\land (P \\lor R) \\\\ \\neg (P \\land Q) &amp;= \\neg P \\lor \\neg Q \\\\ \\neg (P \\lor Q) &amp;= \\neg P \\land \\neg Q \\end{align*}\\] <p>We can see how these work using truth tables as above.</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#contrapositive","title":"Contrapositive","text":"<p>The contrapositive of an implication \\(P \\Rightarrow Q\\) is defined as \\(\\neg Q \\Rightarrow \\neg P\\). Both of these are logically equivalent, meaning we can prove either one is true - indeed, sometimes the contrapositive is easier to prove. Indeed, the truth table below shows the logical equivalence.</p> \\(P\\) \\(Q\\) \\(P \\Rightarrow Q\\) \\(\\neg Q\\) \\(\\neg P\\) \\(\\neg Q \\Rightarrow \\neg P\\) T T T F F T T F F T F F F T T F T T F F T T T T"},{"location":"blog/2025/08/25/introduction-to-logic/#universal-and-existential-quantifiers","title":"Universal and Existential Quantifiers","text":"<p>While we are here, we also define the universal \\(\\forall\\) and existential \\(\\exists\\) quantifiers:</p> <ul> <li>\\(\\forall\\) means \"for all\" or \"for every\";</li> <li>\\(\\exists\\) means \"there exists\" or \"there is at least one\"; and</li> <li>\\(:\\) means \"such that\", sometimes also denoted simply as \\(s.t.\\)</li> </ul> <p>Then if \\(P(x)\\) is some statement involving the variable \\(x\\), we can form the universal statement \\(\\forall x, P(x)\\), which is true if and only if \\(P(x)\\) is true for every possible value of \\(x\\). The logical negation of this statement \\(\\neg (\\forall x\\, P(x))\\) is equivalent to the existential statement \\(\\exists x: \\neg P(x)\\), which is true if and only if there exists at least one value of \\(x\\) such that \\(P(x)\\) is false.</p> <p>For example, \\(\\forall x \\in \\mathbb{R}, x^2 \\geq 0\\) is true (see here for more information on \\(\\mathbb{R}\\)). Indeed, any real number squared is non-negative, e.g. \\((-3)^2 = 9 \\geq 0\\) and \\(2^2 = 4 \\geq 0\\). For the converse statement, consider \\(P(x)\\) to be \\(x^3 &gt; 0\\) and \\(x\\) to be any real number. Then clearly if we look at any negative \\(x\\), say \\(x = -1\\), we have \\(P(x) = (-1)^3 = 1 &lt; 0\\), so there does exist an \\(x\\) for which \\(\\neg P(x)\\) is true.</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#axioms","title":"Axioms","text":"<p>An axiom is simply a statement that is taken to be true without proof, and serves as a starting point for further reasoning and arguments. Indeed, many mathematical systems are built upon a set of axioms. For example, the field and order axioms of \\(\\mathbb{R}\\) are defined below.</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#field-axioms","title":"Field Axioms","text":"<p>These define the arithmetic properties of addition and multiplication within the set \\(\\mathbb{R}\\). This includes properties like commutativity, associativity, distributivity, identity elements (\\(0\\) and \\(1\\)), and additive/multiplicative inverses.</p> Axiom ID Axiom Description A1 \\(\\forall a, b, c \\in \\mathbb{R}, a + (b + c) = (a + b) + c\\) \\(+\\) is associative A2 \\(\\forall a, b \\in \\mathbb{R}, a + b = b + a\\) \\(+\\) is commutative A3 \\(\\exists 0 \\in \\mathbb{R} : \\forall a \\in \\mathbb{R}, a + 0 = a = 0 + a\\) additive identity A4 \\(\\forall a \\in \\mathbb{R}\\, \\exists (-a) \\in \\mathbb{R} : a + (-a) = 0 = (-a) + a\\) additive inverse A5 \\(\\forall a, b, c \\in \\mathbb{R}, a(bc) = (ab)c\\) \\(\\times\\) is associative A6 \\(\\forall a, b \\in \\mathbb{R}, ab = ba\\) \\(\\times\\) is commutative A7 \\(\\exists 1 \\in \\mathbb{R}\\backslash \\{0\\} : \\forall a \\in \\mathbb{R}, a1 = a = 1a\\) multiplicative identity A8 \\(\\forall a \\in \\mathbb{R}\\backslash \\{0\\} \\exists a^{-1} \\in \\mathbb{R} : aa^{-1} = 1 = a^{-1}a\\) multiplicative inverse A9 \\(\\forall a, b , c \\in \\mathbb{R}, a(b+c) = ab + ac\\) distributivity <p>The notation \\(A \\backslash B\\) is used to denote the set of elements in \\(A\\) that are not in \\(B\\). So \\(\\mathbb{R} \\backslash \\{0\\}\\) is the set of all real numbers except \\(0\\).</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#order-axioms","title":"Order Axioms","text":"<p>These build on the field axioms by introducing a notion of order (i.e., inequality) to the set \\(\\mathbb{R}\\). For example, trichotomy is that every number \\(x\\) is either negative, positive or \\(0\\)</p> Axiom ID Axiom Description A10 \\(\\forall a \\in \\mathbb{R}\\) either \\(a &lt; 0\\), \\(a = 0\\) or \\(a &gt; 0\\) trichotomy of cardinals A11 \\(\\forall a, b, c \\in \\mathbb{R}\\) if \\(a &lt; b\\) then \\(a + c &lt; b + c\\) A12 \\(\\forall a, b, c \\in \\mathbb{R}\\) if \\(a &lt; b\\) and \\(c &gt; 0\\) then \\(ac &lt; bc\\) <p>For more information on axioms, see here.</p>"},{"location":"blog/2025/08/25/introduction-to-logic/#examples","title":"Examples","text":"<p>Using these axioms we can derive many useful properties of real numbers.</p> <p>Example 1. The additive identity \\(0\\) in \\(\\mathbb{R}\\) is unique.</p> <p>Solution. To prove this, we suppose there are two additive identities, say \\(0_A\\) and \\(0_B\\). Then by A3 we have that for any \\(a\\) in \\(\\mathbb{R}\\) that \\(a + 0_A = a\\) and \\(a + 0_B = a\\). Now letting \\(a = 0_B\\) in the first equation gives \\(0_B + 0_A = 0_A\\), and \\(a = 0_A\\) in the second gives \\(0_A + 0_B = 0_A\\). Then using A2 we see that \\(0_A = 0_B + 0_A = 0_A + 0_B = 0_B\\), hence \\(0_A = 0_B\\). So if there were to exist two additive identities, we have just shown that they must be equal, hence uniqueness.</p> <p>Example 2. For any \\(a,b \\in \\mathbb{R}\\), if \\(ab = 0\\) then either \\(a = 0\\) or \\(b = 0\\).</p> <p>Solution. Suppose that \\(ab = 0\\) but that \\(a \\neq 0\\) (without loss of generality WLOG, since we could just relabel the variables). Then by A8 there exists a multiplicative inverse \\(a^{-1}\\) such that \\(a^{-1}a = 1\\) and so</p> \\[\\begin{align*} a^{-1}(ab) = (a^{-1}a)b = 1b = b = 0 \\end{align*}\\] <p>Example 3. For any \\(a \\in \\mathbb{R}\\), we have \\(-(-a) = a\\).</p> <p>Solution. That is, the additive inverse of the additive inverse of \\(a\\) is just \\(a\\) itself. So for any \\(a \\in \\mathbb{R}\\), axiom A4 gives us an element \\(-a \\in \\mathbb{R}\\) with \\(a + (-a) = 0 = (-a) + a\\). But since \\((-a) \\in \\mathbb{R}\\), axiom A4 also gives us an element \\(-(-a) \\in \\mathbb{R}\\) such that </p> \\[-(-a) + (-a) = 0 = (-a) + -(-a)\\] <p>Then adding \\(-(-a)\\) to both sides of the equation \\(a + (-a) = 0\\), using A1/A3 we see that </p> \\[\\begin{align*} (a + (-a)) + (-(-a)) = a + ((-a) + (-(-a))) = a + 0 &amp;= a \\\\ 0 + (-(-a)) &amp;= -(-a) \\end{align*}\\] <p>and both sides are equal. A similar proof would show that \\((a^{-1})^{-1} = a\\) for any \\(a\\).</p> <p>Example 4. For any \\(a, b, c \\in \\mathbb{R}\\), if \\(a + c = b + c\\) then \\(a = b\\).</p> <p>Solution. There is an additive inverse \\(-c\\) such that \\(c + (-c) = 0\\) and so adding \\(-c\\) to both sides of the equation and using associativity we see that</p> \\[\\begin{align*} (a + c) + (-c) &amp;= a + (c + (-c)) = a + 0 = a\\\\ (b + c) + (-c) &amp;= b + (c + (-c)) = b + 0 = b \\end{align*}\\] <p>and so \\(a = b\\). A similar proof would prove that if \\(a \\neq 0\\) and \\(ab = ac\\), then \\(b = c\\).</p>"},{"location":"cv/docs/","title":"CV","text":"<p>You can download or view my latest CV here.</p> <p>Expertise in Python, SQL and Infrastructure as Code as well as Airflow, Bash, Testing, dbt, Databases, Docker, APIs and Spark. I like to design solutions (from networking and permissions through to app development) and then implement with best practices. I am keen to learn new tools and develop on the ones I already have.</p>"},{"location":"cv/docs/#certifications","title":"Certifications","text":"<p>Check out my current valid certifications.</p> <p> </p>"},{"location":"cv/docs/#work-experience","title":"Work Experience","text":""},{"location":"cv/docs/#technical-experience","title":"Technical Experience","text":""},{"location":"cv/docs/#trinity-college-london","title":"Trinity College London","text":"<p>Data Engineer (Hybrid) / August 2025 \u2013 present Contract Role (9 Months)</p>"},{"location":"cv/docs/#hard-rock-digital","title":"Hard Rock Digital","text":"<p>Data Engineer (Remote) / January 2025 \u2013 August 2025 Permanent Role</p> <ul> <li>Optimising and Refactoring Suboptimal Processes<ul> <li>Refactored and optimised various Airflow DAGs to adhere to best practices, improving the efficiency of DAG parsing and debugging.</li> <li>Started the creation of documentation in DBT Cloud, utilising unit and data tests for audit purposes, as well as Snowflake.</li> <li>Designed and built out in Terraform the new gambling self-exclusion pipeline, creating a new data model for efficiency.</li> <li>Created several CI/CD pipelines for deployment of this pipeline, as well as testing including tools such as mypy.</li> <li>Bootstrapped the Astronomer (Airflow) environments for our regulatory team, creating utility operators for logging and notifications.</li> <li>Created a template for unit testing including mocking, as well as introducing data validation tools to the team.</li> </ul> </li> </ul>"},{"location":"cv/docs/#marketcast","title":"MarketCast","text":"<p>Senior Cloud Engineer (Hybrid) / November 2023 \u2013 January 2025 Permanent Role</p> <ul> <li>Designing and Implementing the Survey Database Solution<ul> <li>As part of the data architecture team, I scoped, designed and implemented our new data warehouse solution for survey data.   The current file-based architecture was limiting use cases and our ability to do further look-backs for historical normative calculations.</li> <li>Utilised AWS CDK/CloudFormation for the deployment (including several event-based Lambdas and ECS for processing the surveys).   Used Redshift for the warehouse solution and dbt for modelling ELT layers within the database, orchestrated through AWS MWAA.</li> <li>Developed a table design to preserve the metadata in the survey SPSS/SAV files and for ease of metadata filtering.</li> <li>Built a generalised API with API Gateway, Route53 and FastAPI for database access and aggregation calculations for dashboards.</li> <li>Implemented proper logging and alerting via SNS, CloudWatch and SQS for error catching / retries between services.</li> <li>Integrating the database with data science ML APIs to enrich the survey data.</li> <li>Created a standard for networking across the data architecture team, which was approved by our AWS account solution architects.</li> <li>Collaborated with teams in the US and India to incorporate this new survey database into the backend of our new product offerings.   The database is currently powering new product dashboards and various products we have migrated.</li> <li>Utilising Redshift as our data warehouse has allowed us to calculate normative values going back years, not just months, in seconds.   It has allowed us to consolidate duplicate products which all had similar architectures, reducing AWS costs by thousands per month.</li> <li>Involved AWS in discussions as part of MAP program to help ensure best practice and design patterns for this architecture.</li> </ul> </li> </ul> <p>Data Engineer / Scientist (Hybrid) / April 2021 \u2013 November 2023 </p> <ul> <li> <p>Automating and Optimising our Attribution Engine</p> <ul> <li>Singularly designed and implemented full end-to-end system for Excel report generation from client requests in JIRA.</li> <li>Utilised GPUs for nearest-neighbour ML algorithm, CTAS for Athena query optimisations and VPC optimisations (NAT and endpoints).</li> <li>Optimised various SQL queries to reduce data scan and execution time and migrated Redshift queries to Athena.</li> <li>Used memory profiling (memray) to track memory usage of jobs to gather training data for an ML model to predict memory usage.</li> <li>The above had significantly improved the reliability of client deliverables, reduced their delivery time and freed up resources.</li> <li>Moreover, we were able to reduce the cost of running a report down to a few hundred pounds from multiple thousand pounds.</li> </ul> </li> <li> <p>Cost Savings, Technical Support and Implementation of Best Practices</p> <ul> <li>Working with the SVP of Technical Architecture to help reduce our organisations AWS account costs.</li> <li>Point of contact for AWS IAM permission issues, BitBucket access and Okta through having admin access.</li> <li>Defined best practices for code development, unit testing, IaC and CI/CD deployments across the data science team.</li> <li>Implemented the principle of least privilege to roles in our production accounts.</li> <li>Conducted knowledge sharing sessions for upskilling the team, based on specific gaps in knowledge.</li> <li>Refactored a suboptimal ETL pipeline for our TV viewing data, reducing EC2 costs by 25% and execution time from hours to minutes (PySpark from Pandas).</li> </ul> </li> <li> <p>Other Things Of Note</p> <ul> <li>Designed and implemented a pipeline for A+E for detecting ageism in advertising.   This involved ingesting thousands of <code>.mp4</code> assets through AWS Rekognition and AWS Transcribe using an event-based and queueing schedule (i.e. SNS, SQS and Lambda).   The resulting output was queried within Athena for analysis.    See the blog post here.</li> </ul> </li> </ul>"},{"location":"cv/docs/#non-technical-experience","title":"Non-Technical Experience","text":""},{"location":"cv/docs/#lcc-learning","title":"LCC Learning","text":"<p>Mathematics Writer (Temporary) / October 2020 </p>"},{"location":"cv/docs/#pimlico-academy","title":"Pimlico Academy","text":"<p>Mathematics Intervention Tutor / January 2020 \u2013 July 2020 </p>"},{"location":"cv/docs/#imperial-college-london","title":"Imperial College London","text":"<p>Graduate Teaching Assistant (Mathematics) / September 2019 \u2013 January 2020</p>"},{"location":"cv/docs/#university-of-bath","title":"University of Bath","text":"<p>Mathematics Senior Peer Tutor / August 2018 \u2013 May 2019 Mathematics First Year Tutor / September 2017 \u2013 May 2019 Mathematics Peer Tutor / September 2016 \u2013 May 2019</p>"},{"location":"cv/docs/#education","title":"Education","text":""},{"location":"cv/docs/#university","title":"University","text":"<p>Masters in Mathematics, MMath. University of Bath attended from September 2015 to July 2019. Awarded first class honours (88%).</p> <p>I specialised in functional analysis and my thesis is here.</p>"},{"location":"cv/docs/#pre-university","title":"Pre-University","text":"<p>A-Levels in Mathematics, Further Mathematics and Chemistry. Gravesend Grammar School attended from September 2013 to July 2015. Awarded A*A*A*.</p> <p>GCSEs. Thamesview School attended from September 2008 to July 2013. Awarded 8 GCSEs grade A*-C and 3 BTECs of grade Distinction.</p>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/mathematical-analysis/","title":"Mathematical Analysis","text":""}]}